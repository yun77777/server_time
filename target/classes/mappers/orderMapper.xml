<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="com.mall.order.serviceImpl.orderMapper">
	
	<select id="selectOrderDetail" parameterType="map"
		resultType="map">
		SELECT @rownum:=@rownum+1 ROWNUM
	 	, B.gdsNum
	 	, B.gdsName
	 	, B.cateCode
	 	, B.gdsPrice
	 	, B.gdsStock
	 	, B.gdsDes
	 	, B.gdsImg
	 	, B.gdsThumbImg
	 	, MF.ORG_FILE_NAME file
	 	, MF.FILE_PATH file_src
	 	, MF.SEQ_MP_FILE_NO file_no
		FROM tbl_goods B,(SELECT @rownum:=0) R
		left outer join MP_FILE MF
		on MF.BNO=#{gdsNum}
		where B.gdsNum=#{gdsNum}
	</select>
	
	<!-- 주문 정보 -->
<insert id="orderInfo" parameterType="map">
<!-- <insert id="orderInfo" parameterType="com.mall.vo.OrderVO"> -->
	<selectKey resultType="int" keyProperty="orderId" order="BEFORE">
		SELECT COALESCE(MAX(orderId),0)+1 AS orderId FROM tbl_order
		WHERE  userId=#{userId,jdbcType=VARCHAR}
	</selectKey>
 	insert into tbl_order(
		 orderId
		 , userId
		 , orderRec
		 , userAddr1
		 , userAddr2
		 , userAddr3
		 , orderPhon
		 , amount
	 )
     values(
	    #{orderId}
	    , #{userId}
	    , #{orderRec}
	    , #{userAddr1}
	    , #{userAddr2}
	    , #{userAddr3}
	    , #{orderPhon}
	    , #{amount}
     )
</insert>
   
<!-- 주문 상세 정보 --> 
<insert id="orderInfo_Details">
<selectKey resultType="int" keyProperty="orderDetailsNum" order="BEFORE">
	SELECT COALESCE(MAX(orderDetailsNum),0)+1 AS orderDetailsNum FROM tbl_order_details

</selectKey>
 insert into tbl_order_details(orderDetailsNum, orderId, gdsNum, cartStock)
     select #{orderDetailsNum}, #{orderId}, gdsNum, cartStock
<!--      select tbl_order_details_seq.nextval, #{orderId}, gdsNum, cartStock -->
         from tbl_cart
         where cartNum=#{cartNum} and userId=#{userId}
</insert> 

	    
	<!-- 카트 비우기 -->
	<delete id="cartAllDelete">
		delete tbl_cart
		    where userId = #{userId}
	</delete>
	
	<!-- 특정 유저의 주문 목록 -->
    <select id="orderList" parameterType="java.util.HashMap"
		resultType="java.util.HashMap">
<!-- 	<select id="orderList" resultType="map">
 --><!-- 	<select id="orderList" resultType="com.mall.vo.OrderVO">
 -->		select 
		    o.orderId, o.userId, o.orderRec,
		    o.userAddr1, o.userAddr2, o.userAddr3,
		    o.orderPhon, o.amount, o.orderDate, o.delivery
		    , od.cartStock
		    , g.gdsName
    	 	,(SELECT ORG_FILE_NAME FROM MP_FILE WHERE BNO=od.gdsNum and FILE_NO=(SELECT MIN(FILE_NO) FROM MP_FILE WHERE BNO=od.gdsNum)) representative_file
		from tbl_order o
		left outer join tbl_order_details od
		on od.orderId=o.orderId
		left outer join tbl_goods g
		on od.gdsNum=g.gdsNum
		    where userId = #{userId}
	</select>
	
	<!-- 특정 주문 목록 -->
	<select id="orderView" resultType="com.mall.vo.OrderListVO">
		select 
		    o.orderId, o.userId, o.orderRec,
		    o.userAddr1, o.userAddr2, o.userAddr3,
		    o.orderPhon, o.amount, o.orderDate, o.delivery,
		    d.orderDetailsNum, d.gdsNum, d.cartStock,
		    g.gdsName, g.gdsThumbImg, g.gdsPrice
		from tbl_order o
		        inner join tbl_order_details d
		            on o.orderId = d.orderId
		        inner join tbl_goods g
		            on d.gdsNum = g.gdsNum
		    where o.userId = #{userId}
		        and o.orderId = #{orderId}
	</select>
	
	
	<!-- 카테고리별 상품 리스트 : 1차 분류 -->
	<select id="list_1" resultType="com.mall.vo.GoodsViewVO">
	select
	    g.gdsNum, g.gdsName, g.cateCode, c.cateCodeRef, c.cateName,
	    gdsPrice, gdsStock, gdsDes, gdsDate, g.gdsImg, g.gdsThumbImg
	        from tbl_goods g
	            inner join goods_category c
	                on g.cateCode = c.cateCode            
	            where g.cateCode = #{cateCode}
	            	or c.cateCodeRef = #{cateCodeRef}
	</select>
	
	<!-- 카테고리별 상품 리스트 : 2차 분류 -->
	<select id="list_2" resultType="com.mall.vo.GoodsViewVO">
	select
	    g.gdsNum, g.gdsName, g.cateCode, c.cateCodeRef, c.cateName,
	    gdsPrice, gdsStock, gdsDes, gdsDate, g.gdsImg, g.gdsThumbImg
	        from tbl_goods g
	            inner join goods_category c
	                on g.cateCode = c.cateCode            
	            where g.cateCode = #{cateCode}
	</select>
	
	<!-- 카트 담기 -->
	<insert id="addCart">
	<selectKey resultType="int" keyProperty="cartNum" order="BEFORE">
		SELECT COALESCE(MAX(cartNum),0)+1 AS cartNum FROM tbl_cart
		where userId=#{userId,jdbcType=VARCHAR}
	</selectKey>
		insert into tbl_cart (cartNum, userId, gdsNum, cartStock)
	   		values (#{cartNum}, #{userId}, #{gdsNum}, #{cartStock})
<!-- 		insert into tbl_cart (cartNum, userId, gdsNum, cartStock)
	   		values (tbl_cart_seq, #{userId}, #{gdsNum}, #{cartStock}) -->
	</insert>
	
	
	<!-- 카트 리스트 -->
	<select id="cartList" resultType="com.mall.vo.CartListVO">
		select
		   
		    c.cartNum, c.userId, c.gdsNum, c.cartStock, c.addDate,
		    g.gdsName, g.gdsPrice, g.gdsThumbImg
		    ,(SELECT ORG_FILE_NAME FROM MP_FILE WHERE BNO=g.gdsNum and FILE_NO=(SELECT MIN(FILE_NO) FROM MP_FILE WHERE BNO=g.gdsNum)) representative_file
		    
		from tbl_cart c
		    inner join tbl_goods g
		        on c.gdsNum = g.gdsNum    
		    where c.userId = #{userId}
<!-- 		select
		    row_number() over(order by c.cartNum desc) as num,
		    c.cartNum, c.userId, c.gdsNum, c.cartStock, c.addDate,
		    g.gdsName, g.gdsPrice, g.gdsThumbImg
		from tbl_cart c
		    inner join tbl_goods g
		        on c.gdsNum = g.gdsNum    
		    where c.userId = #{userId} -->
	</select>
	
	<!-- 카트 삭제 -->
	<delete id="deleteCart" parameterType="map">
<!-- 	<delete id="deleteCart" parameterType="com.mall.vo.CartVO"> -->
		delete from tbl_cart
		    where cartNum = #{cartNum} and userId = #{userId}
	</delete>
	
	
	<delete id="updateCart" parameterType="map">
		update tbl_cart
		set cartStock = #{cartStock}
		where userId = #{userId} and cartNum = #{cartNum}
	</delete>
	
	<select id="maxOrderId" resultType="int">
		SELECT MAX(orderId) FROM tbl_order
	</select>
</mapper>